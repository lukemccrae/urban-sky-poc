{
  "version": 3,
  "sources": ["../handler.ts", "../mockBalloons.ts", "../mockViewers.ts"],
  "sourcesContent": ["import { Viewer } from \"./types\";\n\nimport { mockBalloons } from \"./mockBalloons\";\nimport { mockViewers } from \"./mockViewers\";\nimport { Event } from \"./schema\";\n\ninterface Resolvers {\n  [key: string]: {\n    [key: string]: (...args: any[]) => any;\n  };\n}\n\nconst resolvers: Resolvers = {\n  Query: {\n    viewer: (_, args: { id: string }) => {\n      const viewer = mockViewers.find((viewer) => {\n        return viewer.id === args.id;\n      });\n\n      if (!viewer) throw new Error(\"Viewer not found\");\n\n      return { ...viewer };\n    },\n  },\n  Viewer: {\n    balloons: (viewer: Viewer, args: { ids: string[] }) => {\n      console.log(viewer, \"<< resolver chain balloons\");\n      // Fetch balloons related to the fetched viewer\n\n      const locationMatchedBalloons = mockBalloons.filter(\n        (obj) => obj.constructionLocation === viewer.id\n      );\n\n      if (args.ids && args.ids.length > 0) {\n        const matchedBalloons = locationMatchedBalloons.filter((balloon) =>\n          args.ids.includes(balloon.id)\n        );\n\n        return matchedBalloons;\n      } else {\n        return locationMatchedBalloons;\n      }\n    },\n  },\n};\n\nexport const handler = async (event: Event, context: any): Promise<any> => {\n  try {\n    const parentTypeName = event.info.parentTypeName;\n    const fieldName = event.info.fieldName;\n    console.log(event, \"<< event\");\n    // invoke the first link of the resolver chain with argument id\n    return resolvers[parentTypeName][fieldName](event.source, event.arguments);\n  } catch (e) {\n    console.log(e);\n  }\n};\n", "import {\n  BalloonModels,\n  ConstructionAreas,\n  ConstructionPhases,\n  EnvelopeTypes,\n  GasTypes,\n  RecoverySystems,\n} from \"./types\";\n\nexport const mockBalloons = [\n  {\n    id: \"111\",\n    model: BalloonModels.Microballoon,\n    constructionLocation: \"123\",\n    cameraPayload: 1,\n    trackingPayloadId: 2,\n    constructionArea: ConstructionAreas.Bay_1,\n    constructionPhase: ConstructionPhases.Packaging,\n    envelopeType: EnvelopeTypes.Chloroprene,\n    gasType: GasTypes.Helium,\n    recoverySystem: RecoverySystems.Parachute,\n  },\n  {\n    id: \"222\",\n    model: BalloonModels.Microballoon,\n    constructionLocation: \"123\",\n    cameraPayload: 1,\n    trackingPayloadId: 2,\n    constructionArea: ConstructionAreas.Bay_2,\n    constructionPhase: ConstructionPhases.PayloadIntegration,\n    envelopeType: EnvelopeTypes.Latex,\n    gasType: GasTypes.Hydrogen,\n    recoverySystem: RecoverySystems.Parachute,\n  },\n  {\n    id: \"333\",\n    model: BalloonModels.Microballoon,\n    constructionLocation: \"123\",\n    cameraPayload: 1,\n    trackingPayloadId: 2,\n    constructionArea: ConstructionAreas.Bay_3,\n    constructionPhase: ConstructionPhases.Packaging,\n    envelopeType: EnvelopeTypes.Chloroprene,\n    gasType: GasTypes.Helium,\n    recoverySystem: RecoverySystems.SoftLanding,\n  },\n  {\n    id: \"444\",\n    model: BalloonModels.Transosonde,\n    constructionLocation: \"456\",\n    cameraPayload: 1,\n    trackingPayloadId: 2,\n    constructionArea: ConstructionAreas.Bay_1,\n    constructionPhase: ConstructionPhases.EnvelopeMolding,\n    envelopeType: EnvelopeTypes.Chloroprene,\n    gasType: GasTypes.Hydrogen,\n    recoverySystem: RecoverySystems.SoftLanding,\n  },\n  {\n    id: \"555\",\n    model: BalloonModels.Transosonde,\n    constructionLocation: \"456\",\n    cameraPayload: 1,\n    trackingPayloadId: 2,\n    constructionArea: ConstructionAreas.Bay_1,\n    constructionPhase: ConstructionPhases.EnvelopeMolding,\n    envelopeType: EnvelopeTypes.Chloroprene,\n    gasType: GasTypes.Hydrogen,\n    recoverySystem: RecoverySystems.SoftLanding,\n  },\n];\n", "export const mockViewers = [\n  { id: \"123\", username: \"viewer1\", email: \"dev1@urbansky.com\" },\n  { id: \"456\", username: \"viewer2\", email: \"dev2@urbansky.com\" },\n];\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GCSO,IAAMI,EAAe,CAC1B,CACE,GAAI,MACJ,qBACA,qBAAsB,MACtB,cAAe,EACf,kBAAmB,EACnB,yBACA,8BACA,2BACA,iBACA,0BACF,EACA,CACE,GAAI,MACJ,qBACA,qBAAsB,MACtB,cAAe,EACf,kBAAmB,EACnB,yBACA,wCACA,qBACA,mBACA,0BACF,EACA,CACE,GAAI,MACJ,qBACA,qBAAsB,MACtB,cAAe,EACf,kBAAmB,EACnB,yBACA,8BACA,2BACA,iBACA,6BACF,EACA,CACE,GAAI,MACJ,oBACA,qBAAsB,MACtB,cAAe,EACf,kBAAmB,EACnB,yBACA,qCACA,2BACA,mBACA,6BACF,EACA,CACE,GAAI,MACJ,oBACA,qBAAsB,MACtB,cAAe,EACf,kBAAmB,EACnB,yBACA,qCACA,2BACA,mBACA,6BACF,CACF,ECtEO,IAAMC,EAAc,CACzB,CAAE,GAAI,MAAO,SAAU,UAAW,MAAO,mBAAoB,EAC7D,CAAE,GAAI,MAAO,SAAU,UAAW,MAAO,mBAAoB,CAC/D,EFSA,IAAMC,EAAuB,CAC3B,MAAO,CACL,OAAQ,CAACC,EAAGC,IAAyB,CACnC,IAAMC,EAASC,EAAY,KAAMD,GACxBA,EAAO,KAAOD,EAAK,EAC3B,EAED,GAAI,CAACC,EAAQ,MAAM,IAAI,MAAM,kBAAkB,EAE/C,MAAO,CAAE,GAAGA,CAAO,CACrB,CACF,EACA,OAAQ,CACN,SAAU,CAACA,EAAgBD,IAA4B,CACrD,QAAQ,IAAIC,EAAQ,4BAA4B,EAGhD,IAAME,EAA0BC,EAAa,OAC1CC,GAAQA,EAAI,uBAAyBJ,EAAO,EAC/C,EAEA,OAAID,EAAK,KAAOA,EAAK,IAAI,OAAS,EACRG,EAAwB,OAAQG,GACtDN,EAAK,IAAI,SAASM,EAAQ,EAAE,CAC9B,EAIOH,CAEX,CACF,CACF,EAEaI,EAAU,MAAOC,EAAcC,IAA+B,CACzE,GAAI,CACF,IAAMC,EAAiBF,EAAM,KAAK,eAC5BG,EAAYH,EAAM,KAAK,UAC7B,eAAQ,IAAIA,EAAO,UAAU,EAEtBV,EAAUY,CAAc,EAAEC,CAAS,EAAEH,EAAM,OAAQA,EAAM,SAAS,CAC3E,OAASI,EAAG,CACV,QAAQ,IAAIA,CAAC,CACf,CACF",
  "names": ["handler_exports", "__export", "handler", "__toCommonJS", "mockBalloons", "mockViewers", "resolvers", "_", "args", "viewer", "mockViewers", "locationMatchedBalloons", "mockBalloons", "obj", "balloon", "handler", "event", "context", "parentTypeName", "fieldName", "e"]
}
